{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport db from \"../../firebase\";\nimport { doc, onSnapshot, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { useAuthentication } from \"../utils/hooks/useAuthentication\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ConversationScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var userId = route.params.userId;\n  var chatRef = doc(db, \"Chats\", userId);\n\n  var _useAuthentication = useAuthentication(),\n      user = _useAuthentication.user,\n      userData = _useAuthentication.userData;\n\n  useEffect(function () {\n    var unsubscribeFromNewSnapshots = onSnapshot(chatRef, function (doc) {\n      console.log(\"New Snapshot!\");\n      setMessages(doc.data().messages);\n    });\n    return function cleanupBeforeUnmounting() {\n      unsubscribeFromNewSnapshots();\n    };\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    updateDoc(chatRef, {\n      messages: arrayUnion(messages[0])\n    });\n  }, []);\n\n  if (!user || !userData) {\n    return _jsx(View, {});\n  }\n\n  return _jsx(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: user.uid,\n      name: userData.name\n    },\n    inverted: false,\n    showUserAvatar: true,\n    renderUsernameOnMessage: true\n  });\n}","map":{"version":3,"names":["React","useState","useCallback","useEffect","GiftedChat","db","doc","onSnapshot","updateDoc","arrayUnion","useAuthentication","ConversationScreen","navigation","route","messages","setMessages","userId","params","chatRef","user","userData","unsubscribeFromNewSnapshots","console","log","data","cleanupBeforeUnmounting","onSend","_id","uid","name"],"sources":["/Users/abuyasen/Desktop/sea/Snap_Academy_Final_Project/src/screens/ConversationScreen.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport db from \"../../firebase\";\nimport { doc, onSnapshot, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { useAuthentication } from \"../utils/hooks/useAuthentication\";\nimport { View } from \"react-native\";\n\nexport default function ConversationScreen({ navigation, route }) {\n  const [messages, setMessages] = useState([]);\n  const { userId } = route.params;\n  const chatRef = doc(db, \"Chats\", userId);\n\n  const { user, userData } = useAuthentication();\n\n  useEffect(() => {\n    let unsubscribeFromNewSnapshots = onSnapshot(chatRef, (doc) => {\n      console.log(\"New Snapshot!\");\n      setMessages(doc.data().messages);\n    });\n\n    return function cleanupBeforeUnmounting() {\n      unsubscribeFromNewSnapshots();\n    };\n  }, []);\n\n  const onSend = useCallback((messages = []) => {\n    updateDoc(chatRef, {\n      // arrayUnion appends the message to the existing array\n      messages: arrayUnion(messages[0]),\n    });\n  }, []);\n  if (!user || !userData) {\n    return <View></View>;\n  }\n  return (\n    <GiftedChat\n      messages={messages}\n      onSend={(messages) => onSend(messages)}\n      user={{\n        _id: user.uid,\n        name: userData.name,\n      }}\n      inverted={false}\n      showUserAvatar={true}\n      renderUsernameOnMessage={true}\n    />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,EAAP;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,oBAAvD;AACA,SAASC,iBAAT;;;AAGA,eAAe,SAASC,kBAAT,OAAmD;EAAA,IAArBC,UAAqB,QAArBA,UAAqB;EAAA,IAATC,KAAS,QAATA,KAAS;;EAChE,gBAAgCZ,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOa,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAQC,MAAR,GAAmBH,KAAK,CAACI,MAAzB,CAAQD,MAAR;EACA,IAAME,OAAO,GAAGZ,GAAG,CAACD,EAAD,EAAK,OAAL,EAAcW,MAAd,CAAnB;;EAEA,yBAA2BN,iBAAiB,EAA5C;EAAA,IAAQS,IAAR,sBAAQA,IAAR;EAAA,IAAcC,QAAd,sBAAcA,QAAd;;EAEAjB,SAAS,CAAC,YAAM;IACd,IAAIkB,2BAA2B,GAAGd,UAAU,CAACW,OAAD,EAAU,UAACZ,GAAD,EAAS;MAC7DgB,OAAO,CAACC,GAAR,CAAY,eAAZ;MACAR,WAAW,CAACT,GAAG,CAACkB,IAAJ,GAAWV,QAAZ,CAAX;IACD,CAH2C,CAA5C;IAKA,OAAO,SAASW,uBAAT,GAAmC;MACxCJ,2BAA2B;IAC5B,CAFD;EAGD,CATQ,EASN,EATM,CAAT;;EAWA,IAAMK,OAAM,GAAGxB,WAAW,CAAC,YAAmB;IAAA,IAAlBY,QAAkB,uEAAP,EAAO;IAC5CN,SAAS,CAACU,OAAD,EAAU;MAEjBJ,QAAQ,EAAEL,UAAU,CAACK,QAAQ,CAAC,CAAD,CAAT;IAFH,CAAV,CAAT;EAID,CALyB,EAKvB,EALuB,CAA1B;;EAMA,IAAI,CAACK,IAAD,IAAS,CAACC,QAAd,EAAwB;IACtB,OAAO,KAAC,IAAD,KAAP;EACD;;EACD,OACE,KAAC,UAAD;IACE,QAAQ,EAAEN,QADZ;IAEE,MAAM,EAAE,gBAACA,QAAD;MAAA,OAAcY,OAAM,CAACZ,QAAD,CAApB;IAAA,CAFV;IAGE,IAAI,EAAE;MACJa,GAAG,EAAER,IAAI,CAACS,GADN;MAEJC,IAAI,EAAET,QAAQ,CAACS;IAFX,CAHR;IAOE,QAAQ,EAAE,KAPZ;IAQE,cAAc,EAAE,IARlB;IASE,uBAAuB,EAAE;EAT3B,EADF;AAaD"},"metadata":{},"sourceType":"module"}