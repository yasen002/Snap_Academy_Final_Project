{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport ReturnButton from \"../components/ReturnButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var auth = getAuth();\n\n  function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"handle submit envoked!!\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n              var user = userCredential.user;\n            }).catch(function (error) {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.logInScreen,\n    children: [_jsx(ReturnButton, {\n      navigation: navigation,\n      returnName: \"AuthHome\"\n    }), _jsx(Text, {\n      style: styles.logInTitle,\n      children: \"Log In\"\n    }), _jsxs(View, {\n      style: styles.logInFields,\n      children: [_jsx(Text, {\n        style: styles.inputText,\n        children: \"USERNAME OR EMAIL\"\n      }), _jsx(TextInput, {\n        style: styles.inputField,\n        secureTextEntry: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      }), _jsx(Text, {\n        style: styles.inputText,\n        children: \"PASSWORD\"\n      }), _jsx(TextInput, {\n        style: styles.inputField,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.logInBtn,\n      onPress: function onPress() {\n        handleSubmit();\n      },\n      children: _jsx(Text, {\n        style: styles.logInText,\n        children: \"Log In\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  logInScreen: {\n    backgroundColor: \"#FFF\",\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  logInTitle: {\n    position: \"absolute\",\n    top: 150,\n    fontSize: 20,\n    fontWeight: \"500\",\n    letterSpacing: 2\n  },\n  logInFields: {\n    width: 250,\n    height: 80,\n    position: \"absolute\",\n    top: 200\n  },\n  inputText: {\n    marginBottom: 20,\n    color: \"#b1b1b1\",\n    fontSize: 12,\n    fontWeight: \"700\",\n    letterSpacing: 1\n  },\n  inputField: {\n    borderBottomColor: \"#aeb5bf\",\n    borderBottomWidth: 1,\n    marginBottom: 20,\n    fontWeight: \"600\"\n  },\n  logInBtn: {\n    padding: 15,\n    backgroundColor: \"#aeb5bf\",\n    width: 250,\n    alignItems: \"center\",\n    borderRadius: 25,\n    position: \"absolute\",\n    bottom: 25\n  },\n  logInText: {\n    fontSize: 18,\n    fontWeight: \"600\",\n    color: \"#FFF\"\n  }\n});","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","useState","ReturnButton","LoginScreen","navigation","email","setEmail","password","setPassword","auth","handleSubmit","console","log","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","styles","logInScreen","logInTitle","logInFields","inputText","inputField","logInBtn","logInText","StyleSheet","create","backgroundColor","height","width","alignItems","position","top","fontSize","fontWeight","letterSpacing","marginBottom","color","borderBottomColor","borderBottomWidth","padding","borderRadius","bottom"],"sources":["/Users/abuyasen/Desktop/sea/Snap_Academy_Final_Project/src/screens/LogInScreen.js"],"sourcesContent":["// LOG IN SCREEN \nimport {\n  Text,\n  View,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\n\n// Components\nimport ReturnButton from \"../components/ReturnButton\";\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const auth = getAuth();\n\n  async function handleSubmit() {\n    console.log(\"handle submit envoked!!\");\n\n    await signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  }\n\n  return (\n    <View style={styles.logInScreen}>\n      <ReturnButton navigation={navigation} returnName=\"AuthHome\" />\n      <Text style={styles.logInTitle}>Log In</Text>\n      <View style={styles.logInFields}>\n        <Text style={styles.inputText}>USERNAME OR EMAIL</Text>\n        <TextInput\n          style={styles.inputField}\n          secureTextEntry={false}\n          autoCapitalize=\"none\"\n          onChangeText={(email) => setEmail(email)}\n        />\n        <Text style={styles.inputText}>PASSWORD</Text>\n        <TextInput\n          style={styles.inputField}\n          secureTextEntry={true}\n          autoCapitalize=\"none\"\n          onChangeText={(password) => setPassword(password)}\n        />\n      </View>\n      <TouchableOpacity\n        style={styles.logInBtn}\n        onPress={() => {\n          handleSubmit();\n        }}\n      >\n        <Text style={styles.logInText}>Log In</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  logInScreen: {\n    backgroundColor: \"#FFF\",\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  logInTitle: {\n    position: \"absolute\",\n    top: 150,\n    fontSize: 20,\n    fontWeight: \"500\",\n    letterSpacing: 2,\n  },\n  logInFields: {\n    width: 250,\n    height: 80,\n    position: \"absolute\",\n    top: 200,\n  },\n  inputText: {\n    marginBottom: 20,\n    color: \"#b1b1b1\",\n    fontSize: 12,\n    fontWeight: \"700\",\n    letterSpacing: 1,\n  },\n  inputField: {\n    borderBottomColor: \"#aeb5bf\",\n    borderBottomWidth: 1,\n    marginBottom: 20,\n    fontWeight: \"600\",\n  },\n  logInBtn: {\n    padding: 15,\n    backgroundColor: \"#aeb5bf\",\n    width: 250,\n    alignItems: \"center\",\n    borderRadius: 25,\n    position: \"absolute\",\n    bottom: 25,\n  },\n  logInText: {\n    fontSize: 18,\n    fontWeight: \"600\",\n    color: \"#FFF\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}