{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport db from \"../../firebase\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  function getUsers() {\n    var querySnapshot;\n    return _regeneratorRuntime.async(function getUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDocs(collection(db, \"Chats\")));\n\n          case 2:\n            querySnapshot = _context.sent;\n            querySnapshot.forEach(function (doc) {\n              setUsers(function (users) {\n                return [].concat(_toConsumableArray(users), [doc.id]);\n              });\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getUsers();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: users == null ? void 0 : users.map(function (user) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.userButton,\n        onPress: function onPress() {\n          navigation.navigate(\"Conversation\", {\n            userId: user\n          });\n        },\n        children: [_jsx(Ionicons, {\n          style: styles.userIcon,\n          name: \"ios-person-outline\",\n          size: 36,\n          color: \"lightgrey\"\n        }), _jsxs(Text, {\n          style: styles.userName,\n          children: [\" \", user, \" \"]\n        }), _jsx(Ionicons, {\n          style: styles.userCamera,\n          name: \"ios-camera-outline\",\n          size: 24,\n          color: \"lightgrey\"\n        })]\n      }, user);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFF\"\n  },\n  userButton: {\n    padding: 25,\n    display: \"flex\",\n    borderBottomColor: \"lightgrey\",\n    borderBottomWidth: 1\n  },\n  userIcon: {\n    position: \"absolute\",\n    left: 5,\n    top: 5\n  },\n  userName: {\n    position: \"absolute\",\n    left: 50,\n    top: 14,\n    fontSize: 18\n  },\n  userCamera: {\n    position: \"absolute\",\n    right: 15,\n    top: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","db","Ionicons","ChatScreen","navigation","users","setUsers","getUsers","querySnapshot","forEach","doc","id","styles","container","map","user","userButton","navigate","userId","userIcon","userName","userCamera","StyleSheet","create","flex","backgroundColor","padding","display","borderBottomColor","borderBottomWidth","position","left","top","fontSize","right"],"sources":["/Users/abuyasen/Desktop/sea/Snap_Academy_Final_Project/src/screens/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, TouchableOpacity, StyleSheet } from \"react-native\";\n\nimport { collection, getDocs } from \"firebase/firestore\";\nimport db from \"../../firebase\";\n\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\n\nexport default function ChatScreen({ navigation }) {\n  const [users, setUsers] = useState([]);\n\n  async function getUsers() {\n    const querySnapshot = await getDocs(collection(db, \"Chats\"));\n    querySnapshot.forEach((doc) => {\n      setUsers((users) => [...users, doc.id]);\n    });\n  }\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {users?.map((user) => {\n        return (\n          <TouchableOpacity\n            style={styles.userButton}\n            onPress={() => {\n              navigation.navigate(\"Conversation\", {\n                userId: user,\n              });\n            }}\n            key={user}\n          >\n            <Ionicons\n              style={styles.userIcon}\n              name=\"ios-person-outline\"\n              size={36}\n              color=\"lightgrey\"\n            />\n            <Text style={styles.userName}> {user} </Text>\n            <Ionicons\n              style={styles.userCamera}\n              name=\"ios-camera-outline\"\n              size={24}\n              color=\"lightgrey\"\n            />\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFF\",\n  },\n  userButton: {\n    padding: 25,\n    display: \"flex\",\n    borderBottomColor: \"lightgrey\",\n    borderBottomWidth: 1,\n  },\n  userIcon: {\n    position: \"absolute\",\n    left: 5,\n    top: 5,\n  },\n  userName: {\n    position: \"absolute\",\n    left: 50,\n    top: 14,\n    fontSize: 18,\n  },\n  userCamera: {\n    position: \"absolute\",\n    right: 15,\n    top: 10,\n  },\n});\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAGA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,OAAOC,EAAP;AAEA,OAAOC,QAAP;;;AAEA,eAAe,SAASC,UAAT,OAAoC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACjD,gBAA0BP,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOQ,KAAP;EAAA,IAAcC,QAAd;;EAEA,SAAeC,QAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC8BP,OAAO,CAACD,UAAU,CAACE,EAAD,EAAK,OAAL,CAAX,CADrC;;UAAA;YACQO,aADR;YAEEA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAS;cAC7BJ,QAAQ,CAAC,UAACD,KAAD;gBAAA,oCAAeA,KAAf,IAAsBK,GAAG,CAACC,EAA1B;cAAA,CAAD,CAAR;YACD,CAFD;;UAFF;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAOAb,SAAS,CAAC,YAAM;IACdS,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEK,MAAM,CAACC,SAApB;IAAA,UACGR,KADH,oBACGA,KAAK,CAAES,GAAP,CAAW,UAACC,IAAD,EAAU;MACpB,OACE,MAAC,gBAAD;QACE,KAAK,EAAEH,MAAM,CAACI,UADhB;QAEE,OAAO,EAAE,mBAAM;UACbZ,UAAU,CAACa,QAAX,CAAoB,cAApB,EAAoC;YAClCC,MAAM,EAAEH;UAD0B,CAApC;QAGD,CANH;QAAA,WASE,KAAC,QAAD;UACE,KAAK,EAAEH,MAAM,CAACO,QADhB;UAEE,IAAI,EAAC,oBAFP;UAGE,IAAI,EAAE,EAHR;UAIE,KAAK,EAAC;QAJR,EATF,EAeE,MAAC,IAAD;UAAM,KAAK,EAAEP,MAAM,CAACQ,QAApB;UAAA,gBAAgCL,IAAhC;QAAA,EAfF,EAgBE,KAAC,QAAD;UACE,KAAK,EAAEH,MAAM,CAACS,UADhB;UAEE,IAAI,EAAC,oBAFP;UAGE,IAAI,EAAE,EAHR;UAIE,KAAK,EAAC;QAJR,EAhBF;MAAA,GAOON,IAPP,CADF;IAyBD,CA1BA;EADH,EADF;AA+BD;AAED,IAAMH,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CADG;IAETC,eAAe,EAAE;EAFR,CADoB;EAK/BT,UAAU,EAAE;IACVU,OAAO,EAAE,EADC;IAEVC,OAAO,EAAE,MAFC;IAGVC,iBAAiB,EAAE,WAHT;IAIVC,iBAAiB,EAAE;EAJT,CALmB;EAW/BV,QAAQ,EAAE;IACRW,QAAQ,EAAE,UADF;IAERC,IAAI,EAAE,CAFE;IAGRC,GAAG,EAAE;EAHG,CAXqB;EAgB/BZ,QAAQ,EAAE;IACRU,QAAQ,EAAE,UADF;IAERC,IAAI,EAAE,EAFE;IAGRC,GAAG,EAAE,EAHG;IAIRC,QAAQ,EAAE;EAJF,CAhBqB;EAsB/BZ,UAAU,EAAE;IACVS,QAAQ,EAAE,UADA;IAEVI,KAAK,EAAE,EAFG;IAGVF,GAAG,EAAE;EAHK;AAtBmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}